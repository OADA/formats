root: true

extends:
  - 'eslint:recommended'
  - 'plugin:@typescript-eslint/recommended'
  - plugin:node/recommended
  - plugin:github/recommended
  - plugin:promise/recommended
  - plugin:regexp/recommended
  #- plugin:array-func/recommended
  - plugin:optimize-regex/recommended
  - plugin:import/recommended
  - plugin:unicorn/recommended
  #- plugin:security/recommended
  - plugin:sonarjs/recommended
  - plugin:ava/recommended
  - xo
  - prettier

plugins:
  - '@typescript-eslint'
  - node
  - escompat
  - github
  - promise
  - regexp
  #- array-func
  - optimize-regex
  - no-constructor-bind
  - import
  - unicorn
  - security
  - no-secrets
  - sonarjs
  - ava
  - notice

settings:
  import/resolver:
    node: true
    typescript: true
  import/external-module-folders: [.yarn, node_modules]

parser: '@typescript-eslint/parser'

parserOptions:
  ecmaVersion: 2020
  project: './**/tsconfig*.json'

overrides:
  - files: '*.schema.{c,m,}ts'
    rules:
      sonarjs/no-duplicate-string: off
  - files: '*.{c,m,}ts'
    extends:
      - plugin:github/typescript
      - plugin:import/typescript
      - xo-typescript
      - prettier
    parserOptions:
      ecmaVersion: 2020
      project: './**/tsconfig*.json'
    rules:
      '@typescript-eslint/naming-convention':
        [
          error,
          { selector: default, format: [camelCase] },
          { selector: import, modifiers: [default], format: null },
          { selector: objectLiteralProperty, format: null },
          { selector: enumMember, format: [PascalCase] },
          { selector: typeProperty, format: null },

          {
            selector: variableLike,
            format: [camelCase, UPPER_CASE],
            leadingUnderscore: allow,
          },
          { selector: variable, modifiers: [destructured], format: null },
          {
            selector: parameter,
            format: [camelCase],
            leadingUnderscore: allow,
          },

          {
            selector: memberLike,
            modifiers: [private],
            format: [camelCase],
            leadingUnderscore: require,
          },

          { selector: typeLike, format: [PascalCase] },

          { selector: parameter, modifiers: [destructured], format: null },
        ]
      '@typescript-eslint/restrict-template-expressions': off
      '@typescript-eslint/no-shadow': warn
      '@typescript-eslint/no-unused-vars':
        [
          warn,
          {
            args: after-used,
            ignoreRestSiblings: true,
            varsIgnorePattern: '^_',
            argsIgnorePattern: '^_',
          },
        ]
      '@typescript-eslint/consistent-type-definitions': [warn, interface]
      '@typescript-eslint/switch-exhaustiveness-check': off

rules:
  notice/notice:
    - error
    - template: |
        /**
         * @license
         * Copyright <%= YEAR %> Open Ag Data Alliance
         *
         * Use of this source code is governed by an MIT-style
         * license that can be found in the LICENSE file or at
         * https://opensource.org/licenses/MIT.
         */
      onNonMatchingHeader: append
      nonMatchingTolerance: 0.7
  sonarjs/no-duplicate-string: [warn, { threshold: 5 }]
  sonarjs/cognitive-complexity: warn
  eslint-comments/no-unused-disable: off
  node/no-unpublished-import: off
  spaced-comment: [error, always, markers: [/, //]]
  filenames/match-regex: off
  unicorn/filename-case: off
  i18n-text/no-en: off
  eslint-comments/no-use: off
  no-secrets/no-secrets: [error, { tolerance: 5 }]
  no-empty-label: off
  no-warning-comments: 0
  node/no-missing-import: off
  import/no-unresolved: off
  import/extensions: off
  unicorn/prefer-spread: off
  unicorn/prevent-abbreviations:
    - warn
    - replacements:
        db: false
        req: false
        res: false
        err: false
        doc: false
        ref: false
  no-constructor-bind/no-constructor-bind: error
  no-constructor-bind/no-constructor-state: error
  sort-imports: [warn, { allowSeparatedGroups: true }]
  ava/no-ignored-test-files: off
  ava/no-import-test-files: off
  ava/no-skip-test: warn
  ava/no-skip-assert: warn
  '@typescript-eslint/switch-exhaustiveness-check': 0
